## Streamlit
#pip install streamlit

# cd /Users/gustavchristensen/Desktop/TechLabs/AI/Data/
# streamlit run rps_app.py

import tensorflow as tf
model = tf.keras.models.load_model('good_and_bad_1.h5')

import streamlit as st
st.write("""
         # Youtube Thumbnail Prediction
         """
         )
st.write("This is a simple image classification web app to predict good-bad thumbnails")
file = st.file_uploader("Please upload an image file", type=["jpg", "png"])

import cv2
from PIL import Image, ImageOps
import numpy as np
import os
os.environ['KMP_DUPLICATE_LIB_OK']='TRUE'

def import_and_predict(image_data, model):
    
        size = (150,150)    
        image = ImageOps.fit(image_data, size, Image.ANTIALIAS)
        image = np.asarray(image)
        img = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        img_resize = (cv2.resize(img, dsize=(150, 150),    interpolation=cv2.INTER_CUBIC))/255.
        
        img_reshape = img_resize[np.newaxis,...]
    
        prediction = model.predict(img_reshape)
        
        return prediction

if file is None:
    st.text("Please upload an image file")
else:
    image = Image.open(file)
    st.image(image, use_column_width=True)
    prediction = import_and_predict(image, model)
    
    if prediction > 0.5:
        st.write("This is a good thumbnail")
    else:
        st.write("This is a bad thumbnail")
    
    st.text("Probability (0: Bad, 1: Good")
    st.write(prediction)

st.write("# Youtube Title Prediction")
st.write("This is a simple classification web app to predict good-bad titles")
message_text = st.text_input("Enter the title of a Youtube video")
